//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DrivingSclData
{
    using System.Data.Entity;

    public partial class DrivingSclEntity : DbContext
    {
        public DrivingSclEntity()
            : base("name=DrivingSclEntity")
        {
            this.Configuration.ProxyCreationEnabled = false;
            this.Configuration.LazyLoadingEnabled = false;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ZGOVERN>()
                .HasMany(e => e.ZCITY)
                .WithRequired(e => e.ZGOVERN)
                .HasForeignKey(e => e.GOV_NB)
                .WillCascadeOnDelete(true);

            modelBuilder.Entity<ZCITY>()
                .Property(e => e.NAME)
                .IsUnicode(false);

            modelBuilder.Entity<ZCITY>()
               .HasMany(e => e.ZREGION)
               .WithRequired(e => e.ZCITY)
               .HasForeignKey(e => e.CTY_NB)
               .WillCascadeOnDelete(true);

            modelBuilder.Entity<ZPRSTYPE>()
               .HasMany(e => e.ZPERSON)
               .WithRequired(e => e.ZPRSTYPE)
               .HasForeignKey(e => e.TYP)
               .WillCascadeOnDelete(true);

            modelBuilder.Entity<ZNATION>()
               .HasMany(e => e.ZPERSON)
               .WithRequired(e => e.ZNATION)
               .HasForeignKey(e => e.NAT)
               .WillCascadeOnDelete(true);

            modelBuilder.Entity<ZGOVERN>()
               .HasMany(e => e.ZCOMPANY)
               .WithRequired(e => e.ZGOVERN)
               .HasForeignKey(e => e.COMREG_GOV)
               .WillCascadeOnDelete(true);

            modelBuilder.Entity<ZCITY>()
               .HasMany(e => e.ZCOMPANY)
               .WithRequired(e => e.ZCITY)
               .HasForeignKey(e => e.CTY_NB)
               .WillCascadeOnDelete(true);

            modelBuilder.Entity<ZREGION>()
               .HasMany(e => e.ZCOMPANY)
               .WithRequired(e => e.ZREGION)
               .HasForeignKey(e => e.REG_NB)
               .WillCascadeOnDelete(true);

            modelBuilder.Entity<ZGOVERN>()
               .HasMany(e => e.SCHOOL)
               .WithRequired(e => e.ZGOVERN)
               .HasForeignKey(e => e.GOV_NB)
               .WillCascadeOnDelete(true);

            modelBuilder.Entity<ZCITY>()
               .HasMany(e => e.SCHOOL)
               .WithRequired(e => e.ZCITY)
               .HasForeignKey(e => e.CTY_NB)
               .WillCascadeOnDelete(true);

            modelBuilder.Entity<ZREGION>()
               .HasMany(e => e.SCHOOL)
               .WithRequired(e => e.ZREGION)
               .HasForeignKey(e => e.REG_NB)
               .WillCascadeOnDelete(true);

            modelBuilder.Entity<ZSCLSTATUS>()
               .HasMany(e => e.SCHOOL)
               .WithRequired(e => e.ZSCLSTATUS)
               .HasForeignKey(e => e.STS_NB)
               .WillCascadeOnDelete(true);

            modelBuilder.Entity<ZSCLTYPE>()
               .HasMany(e => e.SCHOOL)
               .WithRequired(e => e.ZSCLTYPE)
               .HasForeignKey(e => e.ST_NB)
               .WillCascadeOnDelete(true);

            modelBuilder.Entity<SCHOOL>()
               .HasMany(e => e.SCHOOLOWNER)
               .WithRequired(e => e.SCHOOL)
               .HasForeignKey(e => e.SCL_NB)
               .WillCascadeOnDelete(true);

            modelBuilder.Entity<ZOWNERTYP>()
               .HasMany(e => e.SCHOOLOWNER)
               .WithRequired(e => e.ZOWNERTYP)
               .HasForeignKey(e => e.OT_NB)
               .WillCascadeOnDelete(true);

            modelBuilder.Entity <ZCATEGORY>()
               .HasMany(e => e.ZCATEGORY1)
               .WithRequired(e => e.ZCATEGORY2)
               .HasForeignKey(e => e.PREV_CATG)
               .WillCascadeOnDelete(true);
        }

        public virtual DbSet<SCHOOL> SCHOOL { get; set; }
        public virtual DbSet<SCHOOLOWNER> SCHOOLOWNER { get; set; }
        public virtual DbSet<SCLPHONE> SCLPHONE { get; set; }
        public virtual DbSet<ZCATEGORY> ZCATEGORY { get; set; }
        public virtual DbSet<ZCITY> ZCITY { get; set; }
        public virtual DbSet<ZCOMPANY> ZCOMPANY { get; set; }
        public virtual DbSet<ZGOVERN> ZGOVERN { get; set; }
        public virtual DbSet<ZNATION> ZNATION { get; set; }
        public virtual DbSet<ZOWNERTYP> ZOWNERTYP { get; set; }
        public virtual DbSet<ZPERSON> ZPERSON { get; set; }
        public virtual DbSet<ZPRSTYPE> ZPRSTYPE { get; set; }
        public virtual DbSet<ZREGION> ZREGION { get; set; }
        public virtual DbSet<ZSCLSTATUS> ZSCLSTATUS { get; set; }
        public virtual DbSet<ZSCLTYPE> ZSCLTYPE { get; set; }
    }
}
